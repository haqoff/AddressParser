<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAKCgAAAEAIABoGgAAFgAAACgAAAAoAAAAUAAAAAEAIAAAAAAAABkAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIikuRx4hH/8eIR//HiEf/yIpLkQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAy49RsurLqP/+8N//6suo/8uPUbIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMuPUs7w1bf//vDf//DV
        t//Lj1LOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAyIhIHMeLSnzIi0v39eDI//7w3//14Mj/yItL98eLSnzEiUQaAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMiHRjPFi0ofAAAAAAAAAADGjVQJyoxNkcmL
        TPbcsYP48Na5//3v3f/+8N///e/d//DWuf/csYP4yYtN9smMTo+/fz8IAAAAAAAAAADFi0ofyIdGMwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALaRSAfJjE3myYxN98qOT7PIhkVGyo5P1diodvX66NT//vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//ro1P/YqHb1yo1P1cWJSEPJjU6yyYxN98mMTea2kUgHAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADJi0p816Vx9Pvr
        2P/kwZv9y5BT9eC5jvr+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf/+C5
        jvrLkFP15MGb/fvr2P/WpXL1yYtKfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADJikoYyIlK+PPcwv/+8N///vDf//7v3v/+8N///vDf//7w
        3//35M3/27CB9suQU/THiUj8y5BT9Nywgfb35M3//vDf//7w3//+8N///u/e//7w3//+8N//89zC/8iL
        SvfJikoYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAv38/CMqLTpvLkFT18de7//7w3//+8N///vDf//7w3//u0rT+yYxO9ciKS4PGhkYk1H9VBsaG
        RiTIi0uEyYxP9e/Ttf/+8N///vDf//7w3//+8N//8de7/8uQVPXKi06bv38/CAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyIdHS8mM
        TfHsz6///vDf//7w3//348z/yI5P9MWIRjoAAAAAAAAAAAAAAAAAAAAAAAAAAMWIRjrJjk/09+TN//7w
        3//+8N//7M+u/8mMTfHGh0VNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADLj1LQ8NW3//7w3//+8N//26+A9siK
        S4MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyItNhNuwgvb+8N///vDf//DVt//Lj1LRAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAyIxM9Pnn0//+8N///vDf/8qQUvTIi0UhAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMeJRCXKj1L0/vDf//7w3//559P/yItL8wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMaI
        R/7+797//vDf//7w3//HiUj81H9VBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUf1UGx4lI/P7w
        3//+8N///u/e/8eJSP0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIjEz0+efT//7w3//+8N//ypBS9MiL
        RSEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxoZGJMuQU/T+8N///vDf//nn0//Ii0vzAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAy49S0PDVt//+8N///vDf/9quf/bJjE2BAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMiLTYTbsIH2/vDf//7w3//w1bf/y49S0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxodFTcmM
        TfHsz67//vDf//7w3//348z/yY1O9MSGRzkAAAAAAAAAAAAAAAAAAAAAAAAAAMWIRjrJjk/09+TN//7w
        3//+8N//7M+v/8mMTfHIh0dLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC/fz8IyotOm8uQVPXx17v//vDf//7w3//+8N///vDf/+7S
        s/7Jjk/0yIpLg8qHQyLUf1UGxIpII8iKS4PJjE717tK0/v7w3//+8N///vDf//7w3//x17v/y5BU9cqL
        Tpu/fz8IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAyYpKGMiLSvfz3ML//vDf//7w3//+797//vDf//7w3//+8N//9+PM/9uvgPbKj1H0x4lI/MqP
        UfTbr4D29+TN//7w3//+8N///vDf//7v3v/+8N///vDf//Pcwv/IiUr4yYpKGAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADJi0p816Vx9Pvr
        2P/kwZv9y5BT9eC5jvr+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf/+C5
        jvrLkFP15MGb/fvr2P/WpXL1yYtKfAAAAAAAAAAAyIpJkceIR//HiEf/yIpJkQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtpFIB8mMTebJjE33yY1OssaHR0TJjU/W2ap49fro
        1P/+8N///vDf//7w3//+8N///vDf//7w3//+8N//+ujU/9endvbKjk/VyIZFRsqOT7PJjE33yYxN5raR
        SAcAAAAAAAAAAMuPULLqvo7/6r6O/8uPULIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADIh0YzxYtKHwAAAAAAAAAAxo1UCcmNTZTJjE323rKF+PDWuf/9793//vDf//3v
        3f/w1rn/3rKF+MmMTfbJjE6Txo1UCQAAAAAAAAAAxYtKH8iHRjMAAAAAyYhHK8mLS5jJikr28MaZ//DG
        mf/Jikr2yYtLmMeIRCkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAyoNGHciKTH/Ii0v39eDI//7w3//14Mj/yItL98eKS33IiEgcAAAAAAAA
        AAD//wABxYtKHwAAAAC2kUgHyotNm8mNTvXis3/89M2j//7btv/+27b/9M2j/+Kzf/zJjU71yoxNmraR
        SAcAAAAAxYtKH///AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAy49SzvDVt//+8N//8NW3/8uPUs4AAAAAAAAAAAAAAAAAAAAAx4pHYMeIR/3KjE21yYxNyNeh
        afX716///ty2//7ctv/+3Lb//ty2//7ctv/+3Lb/+9ev/9agZ/bKi0zHyoxNtceIR/3HikdgAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMuPUbLqy6j//vDf/+rL
        qP/Lj1GyAAAAAAAAAAAAAAAAv38/DMmKS+/wxpn/5reG/d+qdvj927X//ty2/+3Dlf/SmV/xyIpJ+ciK
        SfnTml/x7sOW//7ctv/927X/36p2+Oa3hv3wxpn/yYpL779/PwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIikmRx4hH/8eIR//HiEf/yIpJkQAAAAAAAAAAAAAAAMWF
        RijJi0zq3qt3+Pzas//+3Lb//ty2/+CvevjIi0rryIhFVMh/SA7MiEQPxodIVciKSuzisHz4/ty2//7c
        tv/82rP/3qt3+MmLTOrFhUYoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAw4dLEciLTNnmuYf//ty2/+3D
        lP/KjEzjw4dLEQAAAAAAAAAAAAAAAAAAAADGjUYSyIpK6+7Dlf/+3Lb/5rmH/8iLTNnDh0sRAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADKjE7k9Myh//7ctv/RmV7xxodIUQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMaIR1bSmV/x/ty2//TMof/KjU3jAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAx4lI+vzZs//+3Lb/x4lJ+r9/PwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIf0gOyIpJ+f7c
        tv/82bP/x4lI+gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMeJSPr82bP//ty2/8eJ
        Sfq/fz8MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyH9IDsiKSfn+3Lb//Nmz/8eJSPoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADKjE3k9M2i//7ctv/RmV3xx4dGUwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMiIRVTSmV/x/ty2//TNov/KjE7kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADDh0sRyItM2ea5h//+3Lb/7cOU/8iLS+rGjUYSAAAAAAAAAAAAAAAAAAAAAMOHSxHIikrr7cOV//7c
        tv/muYf/yItM2cOHSxEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADFhUYoyYtM6t6rd/j82rP//ty2//7c
        tv/grnr4yItL6seHRlPEiU4NxIlODcaHSFHKjEzj4K96+P7ctv/+3Lb//Nqz/96rd/jJi0zqxYVGKAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAv38/DMmKS+/wxpn/5reG/d+qdvj927X//ty2/+3ClP/SmV7xx4lJ+seJ
        SfrSmV7x7cOU//7ctv/927X/36p2+Oa3hv3wxpn/yYpL779/PwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADHikdgx4hH/cqMTbXJjEzI16Fp9vvXsP/+3Lb//ty2//7ctv/+3Lb//ty2//7ctv/716//16Fp9cmM
        TcjKjE21x4hH/ceKR2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//8AAcWLSh8AAAAAv38/CMmM
        TZ7KjU714rN//PXOo//+27b//tu2//XOo//is3/8yY1O9cqLTZu2kUgHAAAAAMWLSh///wABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyYhHK8qMTZrJikr28MaZ//DG
        mf/Jikr2yoxNmsmIRysAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAy49Qsuq+jv/qvo7/y49QsgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMiJSZHHiEf/x4hH/8iJSZEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//////8AAAD/4P///wAAAP/g
        ////AAAA/+D///8AAAD/gD///wAAAOYADP//AAAAwAAAf/8AAADAAAB//wAAAIAAAD//AAAAgAAAP/8A
        AADgHwD//wAAAPA/gf//AAAA8D+B//8AAADwP4H//wAAAPA/gf//AAAA8D+B//8AAADgHwD//wAAAIAA
        AD//AAAAgAAAP/8AAADAAABh/wAAAMAAAGH/AAAA5gAMgH8AAAD/gDIAEwAAAP/g8AADAAAA/+DgAAEA
        AAD/4OAAAQAAAP//8B4DAAAA///4PwcAAAD///g/BwAAAP//+D8HAAAA///4PwcAAAD///AeAwAAAP//
        4AABAAAA///gAAEAAAD///AAAwAAAP//8gATAAAA////gH8AAAD////h/wAAAP///+H/AAAA//////8A
        AAA=
</value>
  </data>
</root>